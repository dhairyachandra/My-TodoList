{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/mrdc/Desktop/Work/My-TodoList/App.js\";\nimport React, { useState } from 'react';\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Task from \"./components/Task\";\nexport default function App() {\n  var _this = this;\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      task = _useState2[0],\n      setTask = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      taskItems = _useState4[0],\n      setTaskItems = _useState4[1];\n\n  var handleAddTask = function handleAddTask() {\n    Keyboard.dismiss();\n    setTaskItems([].concat(_toConsumableArray(taskItems), [task]));\n    setTask(null);\n  };\n\n  var completeTask = function completeTask(index) {\n    var itemsCopy = _toConsumableArray(taskItems);\n\n    itemsCopy.splice(index, 1);\n    setTaskItems(itemsCopy);\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.tasksWrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: styles.sectionTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, \"My Tasks\"), React.createElement(View, {\n    style: styles.items,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, React.createElement(ScrollView, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }\n  }, taskItems.map(function (item, index) {\n    return React.createElement(TouchableOpacity, {\n      key: index,\n      onPress: function onPress() {\n        return completeTask(index);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 23\n      }\n    }, React.createElement(Task, {\n      text: item,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 18\n      }\n    }));\n  })))), React.createElement(KeyboardAvoidingView, {\n    behaviour: Platform.OS == \"ios\" ? \"padding\" : \"height\",\n    style: styles.writeTaskWrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, React.createElement(TextInput, {\n    style: styles.input,\n    placeholder: 'New Task',\n    value: task,\n    onChangeText: function onChangeText(text) {\n      return setTask(text);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return handleAddTask();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.addWrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.addtext,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, \"+\")))));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#E8EAED'\n  },\n  tasksWrapper: {\n    paddingTop: 70,\n    paddingHorizontal: 20\n  },\n  sectionTitle: {\n    fontSize: 30,\n    fontWeight: 'bold'\n  },\n  items: {\n    marginTop: 30,\n    marginBottom: 200\n  },\n  writeTaskWrapper: {\n    position: 'absolute',\n    bottom: 60,\n    width: '100%',\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    alignItems: 'center'\n  },\n  input: {\n    marginLeft: 15,\n    paddingVertical: 15,\n    paddingHorizontal: 15,\n    width: 250,\n    backgroundColor: '#fff',\n    borderRadius: 60,\n    borderColor: \"#c0c0c0\",\n    borderWidth: 1,\n    width: 250\n  },\n  addWrapper: {\n    width: 60,\n    height: 60,\n    backgroundColor: '#fff',\n    borderRadius: 60,\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderColor: '#c0c0c0',\n    borderWidth: 1\n  },\n  addtext: {}\n});","map":{"version":3,"sources":["/Users/mrdc/Desktop/Work/My-TodoList/App.js"],"names":["React","useState","Task","App","task","setTask","taskItems","setTaskItems","handleAddTask","Keyboard","dismiss","completeTask","index","itemsCopy","splice","styles","container","tasksWrapper","sectionTitle","items","map","item","Platform","OS","writeTaskWrapper","input","text","addWrapper","addtext","StyleSheet","create","flex","backgroundColor","paddingTop","paddingHorizontal","fontSize","fontWeight","marginTop","marginBottom","position","bottom","width","flexDirection","justifyContent","alignItems","marginLeft","paddingVertical","borderRadius","borderColor","borderWidth","height"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport { KeyboardAvoidingView,Platform, StyleSheet, Text, TouchableOpacity, View , TextInput, Keyboard, ScrollView} from 'react-native';\nimport Task from './components/Task';\n\nexport default function App() {\n  const [task,setTask] = useState();\n  const [taskItems, setTaskItems] = useState([]);\n  const handleAddTask = () => {\n    Keyboard.dismiss();\n    setTaskItems([...taskItems, task])\n    setTask(null);\n  }\n\n  const completeTask = (index) =>{\n    let itemsCopy = [...taskItems];\n    itemsCopy.splice(index,1);\n    setTaskItems(itemsCopy);\n  }\n\n  return (\n    <View style={styles.container}>\n      \n    <View style = {styles.tasksWrapper}>\n        <Text style ={styles.sectionTitle}>My Tasks</Text>\n        \n        <View style = {styles.items}>\n          <ScrollView>\n          {\n            taskItems.map((item, index) => {\n              return (<TouchableOpacity key={index} onPress={() => completeTask(index)}>\n                 <Task  text = {item} />\n              </TouchableOpacity>)\n             \n            })\n          }\n          </ScrollView>\n\n        </View>\n    </View>\n    <KeyboardAvoidingView\n      behaviour={Platform.OS == \"ios\" ? \"padding\" : \"height\"}\n      style={styles.writeTaskWrapper}\n      >\n        <TextInput style={styles.input} placeholder = {'New Task'} value = {task} onChangeText = {text => setTask(text)}></TextInput>\n        <TouchableOpacity onPress ={() => handleAddTask()}> \n          <View style={styles.addWrapper}>\n            <Text style={styles.addtext}>+</Text>\n          </View>\n        </TouchableOpacity>\n\n      </KeyboardAvoidingView>\n\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#E8EAED',\n  },\n  tasksWrapper: {\n    paddingTop: 70,\n    paddingHorizontal: 20,\n  },\n  sectionTitle: {\n    fontSize: 30,\n    fontWeight: 'bold',\n    \n  },\n  items: {\n    marginTop: 30,\n    marginBottom: 200,\n  },\n  writeTaskWrapper:{\n    position: 'absolute',\n    bottom: 60,\n    width: '100%',\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    alignItems: 'center'\n  },\n  input:{\n    marginLeft: 15,\n    paddingVertical: 15,\n    paddingHorizontal: 15,\n    width: 250,\n    backgroundColor: '#fff',\n    borderRadius: 60,\n    borderColor: \"#c0c0c0\",\n    borderWidth: 1,\n    width: 250,\n  },\n  addWrapper:{\n    width: 60,\n    height: 60,\n    backgroundColor: '#fff',\n    borderRadius: 60,\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderColor: '#c0c0c0',\n    borderWidth: 1,\n  },\n  addtext:{},\n    \n});\n"]},"metadata":{},"sourceType":"module"}